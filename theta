#!/usr/bin/ruby
# coding: utf-8
#
# RICHO THETA S を操作する
#
# APIリファレンス:
#   https://developers.theta360.com/ja/docs/v2/api_reference/
#

require 'net/http'
require 'json'

class Theta
  def usage
    STDERR.puts <<EOF
theta: RICHO ThetaSのファイル操作など

Usage:
  % theta ls            # THETAの画像/動画ファイルをリストする
  % theta get uri       # THETAファイルをパソコンにコピーする
  % theta delete uri    # THETAファイルを削除する
  % theta volume        # シャッター音量を知る
  % theta volume val    # シャッター音量を設定する
  % theta xxxx.JPG      # THETAビュワーでファイルを開く

EOF
    close if @sessionId
    exit
  end
  
  def exec_command(name, param)
    res = @http.post '/osc/commands/execute', {name:name, parameters:param}.to_json
  end
  
  def exec_json(name, param)
    JSON.parse exec_command(name,param).body
  end
  
  def initialize(args)
    @args = args
    usage if args.length == 0
    
    if @args[0] =~ /\.(JPG|MP4)$/ then
      puts "open #{args[0]} -a '/Applications/RICOH THETA.app'"
      system "open #{args[0]} -a '/Applications/RICOH THETA.app'"
      exit
    end
      
    @http = Net::HTTP.new('192.168.1.1', 80)
    begin
      res = exec_json "camera.startSession", nil
      @sessionId = res["results"]["sessionId"]
    rescue
      puts "THETAが見つかりません。THETAのWiFiをONにしてパソコンからWiFi接続して下さい。"
      exit
    end

    cmd = args[0]
    if Theta.method_defined?(cmd.to_sym) then
      method(cmd.to_sym).call
      close
    else
      puts "コマンド '#{cmd}' は存在しません。"
      usage
    end
  end

  def close
    params = {sessionId: @sessionId}
    exec_command 'camera.closeSession', params
  end

  def list
    entries = []
    token = nil
    while true do
      res = exec_json "camera._listAll", { entryCount:10, includeThumb: false, continuationToken:token}
      token = res['results']['continuationToken']
      res['results']['entries'].each { |result|
        entries << result
      }
      break unless token
    end
    entries
  end
  
  def ls
    list.each { |entry|
      puts entry
    }
  end

  def get_file(uri)
    uri =~ /^(.*)\/(.*)$/
    name = $2
    if name =~ /JPG$/ then
      res = exec_command "camera.getImage", {fileUri: uri}
    elsif name =~ /MP4$/ then
      res = exec_command "camera._getVideo", {fileUri: uri}
    end
    open(name, "wb") {|f| f.write(res.body)}
  end

  def get
    uri = @args[1]
    usage unless uri
    get_file uri
  end

  def get_all
    list.each { |entry|
      STDERR.puts "getting #{entry['name']}..."
      get_file entry['uri']
    }
  end

  def delete_file(uri)
    res = exec_json "camera.delete", {fileUri: uri}
  end

  def delete
    uri = @args[1]
    usage unless uri
    res = delete_file(uri)
  end

  def delete_all
    list.each { |entry|
      STDERR.puts "deleting #{entry['name']}..."
      delete_file entry['uri']
    }
  end

  def volume
    val = @args[1]
    if val then
      res = exec_json 'camera.setOptions', {sessionId: @sessionId, options:{_shutterVolume:val.to_i}}
      if res['state'] == "done"
        STDERR.puts "Thetaのシャッター音を #{val} に設定しました"
      else
        STDERR.puts "Thetaのシャッター音設定に失敗しました"
      end
    else
      res = exec_json 'camera.getOptions', {sessionId: @sessionId, optionNames:["_shutterVolume"]}
      STDERR.puts "Thetaのシャッター音量は #{res['results']['options']['_shutterVolume']} です"
    end
  end
end

theta = Theta.new ARGV
